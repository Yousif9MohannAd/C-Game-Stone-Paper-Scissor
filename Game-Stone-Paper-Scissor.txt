#include<iostream>
#include<cstdlib>

using namespace std;

enum enGameChoice{ stone = 1, paper = 2 , scissors = 3 };
enum enWinner{ player1 = 1 , computer = 2 , draw = 3 };

struct stRoundinfo
{
	short Roundnumber = 0;
	enGameChoice Player1Choice;
	enGameChoice ComputerChoice;
	enWinner Winner;
	string WinnerName;
};

struct stGameResult
{
	short GameRounds = 0;
	short Player1WinTime = 0;
	short Computer2WinTimes = 0;
	short DrawTimes = 0;
	enWinner GameWinner;
	string WinnerName = " ";
};

int RandomNumber(int From, int To)
{
	//Function to generate a random number
	int randNm = rand() % (To - From + 1) + From;
	return randNm;
}

string WineerName(enWinner Winner)
{
	string arrWinnerName[3] = { "Player1", "Computer", "No Winner" };
	
	return arrWinnerName[Winner - 1];
}

enWinner WhoTHeRound(stRoundinfo RoundInfo)
{
	if (RoundInfo.Player1Choice == RoundInfo.ComputerChoice)
	{
		return enWinner::draw;
	}

	switch (RoundInfo.Player1Choice)
	{
	case enGameChoice::stone:
			if (RoundInfo.ComputerChoice == enGameChoice::paper)
			{
				return enWinner::computer;
			}break;
	case enGameChoice::paper:
		if (RoundInfo.ComputerChoice == enGameChoice::scissors)
		{
			return enWinner::computer;
		}break;

	case enGameChoice::scissors:
		if (RoundInfo.ComputerChoice == enGameChoice::stone)
		{
			return enWinner::computer;
		}break;
	}
	//if you rech her then player1 is the Winner
	return enWinner::player1;
}

string ChoiceName(enGameChoice Choice)
{
	string arrGameChoice[3] = { "stone","paper","scissors" };
	return arrGameChoice[Choice - 1];
}

void SetWinnerScreenColor(enWinner Winner)
{
	switch (Winner)
	{
	case enWinner::player1:
		system("color 2F");//trun screen to green
		break;
	case enWinner::computer:
		system("color 4f");//trun screen to red
		break;
	default:
		system("color 6f");//trun screen to yellow
		break;
	}
}

void PrintRoundResult(stRoundinfo RoundInfo)
{
	cout << "\n_________________________Round [" << RoundInfo.Roundnumber << "]______________________\n\n";
	cout << "player1 choice : " << ChoiceName(RoundInfo.Player1Choice) << endl;
	cout << "computer choice : " << ChoiceName(RoundInfo.ComputerChoice) << endl;
	cout << "Round winner : [ " << RoundInfo.WinnerName << "]\n";
	cout << "\n_________________________________________________________\n" << endl;
	SetWinnerScreenColor(RoundInfo.Winner);
}

enWinner WhoWonTheGame(short Player1WinTimes, short ComputerWinTimes)
{
	if (Player1WinTimes > ComputerWinTimes)
		return enWinner::player1;
	else if (ComputerWinTimes > Player1WinTimes)
		return enWinner::computer;
	else
		return enWinner::draw;
}

stGameResult FillGameResult(int GameRounds, short Player1WinTimes, short ComputerWinTimes, short DrawTimes)
{
	stGameResult GameResult;

	GameResult.GameRounds = GameRounds;
	GameResult.Player1WinTime = Player1WinTimes;
	GameResult.Computer2WinTimes = ComputerWinTimes;
	GameResult.DrawTimes = DrawTimes;
	GameResult.GameWinner = WhoWonTheGame(Player1WinTimes, ComputerWinTimes);
	GameResult.WinnerName = WineerName(GameResult.GameWinner);
	return GameResult;
}

enGameChoice ReadPlayer1Choice()
{
	short Choice = 1;
	do {
		cout << "\n you choice : [1]:stone, [2]:paper,[3]:scissors ? ";
		cin >> Choice;

	} while (Choice < 1 || Choice>3);
	return (enGameChoice)Choice;
}

enGameChoice GetCopmuterChoice()
{
	return(enGameChoice)RandomNumber(1, 3);
}

stGameResult PlayGame(short HowManyRounds)
{
	stRoundinfo RoundInfo;
	short Player1WinTimes = 0, ComputerWinTimes = 0, DrawTimes = 0;

	for (short GameRound = 1; GameRound <= HowManyRounds; GameRound++)
	{
		cout << "\n Round [" << GameRound << "] begins:\n";
		RoundInfo.Roundnumber = GameRound;
		RoundInfo.Player1Choice = ReadPlayer1Choice();
		RoundInfo.ComputerChoice = GetCopmuterChoice();
		RoundInfo.Winner = WhoTHeRound(RoundInfo);
		RoundInfo.WinnerName = WineerName(RoundInfo.Winner);

		//Increase win/Draw counters
		if (RoundInfo.Winner == enWinner::player1)
			Player1WinTimes++;
		else if (RoundInfo.Winner == enWinner::computer)
			ComputerWinTimes++;
		else
			DrawTimes++;
		PrintRoundResult(RoundInfo);
	}
	return FillGameResult(HowManyRounds, Player1WinTimes, ComputerWinTimes, DrawTimes);
}

string Tabs(short NumberOfTabs)
{
	string t = " ";
	for (int i = 1; i < NumberOfTabs; i++)
	{
		t = t + "\n t";
		cout << t;
	}
	return t;
}

void ShowGameOverScreen()
{
	cout << Tabs(2) <<
		"___________________________________________________________\n\n";
	cout << Tabs(2) <<
		"              +++ GAME OVER +++ \n\n";
	cout << Tabs(2) <<
		"___________________________________________________________\n\n";
}

void ShowFinalGameResult(stGameResult GameResults)
{
	cout << Tabs(2) << "_______________________[  GAME RESULTE   ]_________________________\n\n";
	cout << Tabs(2) << "Game Rounds      : " << GameResults.GameRounds << endl;
	cout << Tabs(2) << "player1 Won Times : " << GameResults.Player1WinTime << endl;
	cout << Tabs(2) << "Computer won time : " << GameResults.Computer2WinTimes << endl;
	cout << Tabs(2) << "Draw times : " << GameResults.DrawTimes << endl;
	cout << Tabs(2) << "Final Winner  : " << GameResults.WinnerName << endl;
	cout << Tabs(2) << "____________________________________________________________________\n";

	SetWinnerScreenColor(GameResults.GameWinner);

}

short ReadHowManyRounds()
{
	short GameRounds = 1;
	do
	{
		cout << "How Many Rounds 1 to 10 ? \n ";
		cin >> GameRounds;
	} while (GameRounds < 1 || GameRounds>10) ;
	return GameRounds;
}

void ResetScreen()
{
	system("cls");
	system("color 0F");
}

void StartGame()
{
	char PlayAgain = 'Y';
	do
	{
		ResetScreen();
		stGameResult GameResult = PlayGame(ReadHowManyRounds());
		ShowGameOverScreen();
		ShowFinalGameResult(GameResult);

		cout << endl << Tabs(3) << "Do uou play again Y/N ? ";

		cin >> PlayAgain;
	} while (PlayAgain == 'Y' || PlayAgain == 'N');
}

int main()
{
	//send the random number generator in c++, called only once
	srand((unsigned)time(NULL));
	StartGame();
	return 0;
}
